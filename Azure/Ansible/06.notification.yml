---
- name: "NSG: NotificationNSG"
  azure_rm_securitygroup:
    resource_group: "{{ rg_demoresourcegroup.state.name }}"
    location: "{{ Region }}"
    name: NotificationNSG
    tags: 
      Env: Demo
      Provisioning: "{{ ProvisioningMethod }}"
      Orchestration: "{{ OrchestrationMethod }}"

    rules:
    - name: CommonManagement-I-100
      priority: 100
      direction: Inbound
      access: Allow
      protocol: Tcp
      destination_port_range: 22
      source_address_prefix: "{{ nic_bastionnic.state.ip_configurations[0].private_ip_address }}/32"
  register: nsg_notificationnsg

- name: "NIC: NotificationNIC"
  azure_rm_networkinterface:
    resource_group: "{{ rg_demoresourcegroup.state.name }}"
    location: "{{ Region }}"
    name: NotificationNIC
    virtual_network: "{{ vnet_demonetwork.state.name }}"
    subnet_name: "{{ subnet_public.state.name }}"
    security_group: "{{ nsg_notificationnsg.state.name }}"
    ip_configurations:
    - name: Notification-nic-ip
      primary: yes
    tags: 
      Env: Demo
      Provisioning: "{{ ProvisioningMethod }}"
      Orchestration: "{{ OrchestrationMethod }}"
  register: nic_notificationnic

- name: "VM: Notification"
  azure_rm_virtualmachine:
    resource_group: "{{ rg_demoresourcegroup.state.name }}"
    location: "{{ Region }}"
    name: Notification
    vm_size: Standard_B1s
    # zones: 
    # - "{{ Az1 }}"
    # Unable to use Zones for VMs here due to https://github.com/ansible/ansible/issues/62861
    network_interface_names: "{{ nic_notificationnic.state.name }}"

    image:
      publisher: "Canonical"
      offer: "UbuntuServer"
      sku: "18.04-LTS"
      version: "latest"

    admin_username: "{{ VmUser }}"
    ssh_public_keys: 
    - path: "/home/{{ VmUser }}/.ssh/authorized_keys"
      key_data: "{{ PublicKey }}"
    ssh_password_enabled: false

    managed_disk_type: Standard_LRS
    os_disk_name: Notification-os-disk1
    os_disk_caching: ReadWrite

    custom_data: |
      #! /bin/bash -x
      /usr/bin/apt update
      /usr/bin/apt install -y ansible
      echo --- > /tmp/playbook.yml
      echo "- hosts: localhost" >> /tmp/playbook.yml
      echo "  gather_facts: false" >> /tmp/playbook.yml
      echo "  tasks:" >> /tmp/playbook.yml
      echo "  - copy:" >> /tmp/playbook.yml
      echo "      content: Confirmed" >> /tmp/playbook.yml
      echo "      dest: /var/log/ansible_run.out" >> /tmp/playbook.yml
      sleep 5
      ansible-playbook /tmp/playbook.yml
      sleep 5

    tags:
      NotificationServer: "True"
      Env: Demo
      Provisioning: "{{ ProvisioningMethod }}"
      Orchestration: "{{ OrchestrationMethod }}"
  register: vm_notification